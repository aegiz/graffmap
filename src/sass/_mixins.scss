/* FLEX */

// usage example: @include flex(row, center, center);

@mixin flex($direction, $horizontal, $vertical, $wrap:'nowrap') {
	display: flex;
	flex-direction: $direction;
	justify-content: $horizontal;
	align-items: $vertical;
	flex-wrap: unquote($wrap);
}

/* FONT SIZE */

// usage example: @include fs(16px);
//            or: @include fs(16);

@mixin fs($size) {
	$base: 16px !default;
	@if (unitless($size)) {
		$size: $size * 1px;
	}
	font-size: $size;
	font-size: ($size / $base) * 1rem;
}

/* MEDIA QUERIES */

// usage example: @include mquery(350px, 2) { width: 100%; }

@mixin mquery($width, $ratio: false) {
	@if $ratio {
		@media only screen and (max-width: $width) and (min--moz-device-pixel-ratio: $ratio),
			only screen and (max-width: $width) and (-webkit-min-device-pixel-ratio: $ratio),
			only screen and (max-width: $width) and (min-device-pixel-ratio: $ratio) {
			@content;
		}
	} @else {
		@media only screen and (max-width: $width) {
			@content;
		}
	}
}

// responsive

$screen-xs-min: 480px;
$screen-sm-min: 768px;
$screen-md-min: 992px;
$screen-lg-min: 1200px;

@mixin responsive($device) {
	@if ($device == xs) {
		@media (max-width: $screen-xs-min) {
			@content;
		}
	} @else if($device == sm) {
		@media (max-width: $screen-sm-min) {
			@content;
		}
	} @else if($device == md) {
		@media (max-width: $screen-md-min) {
			@content;
		}
	} @else if($device == lg) {
		@media (max-width: $screen-lg-min) {
			@content;
		}
	} @else {
		@media (max-width: $device) {
			@content;
		}
	}
}
